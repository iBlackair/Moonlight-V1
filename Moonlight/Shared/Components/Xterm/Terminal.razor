@using XtermBlazor

@implements IDisposable

<Xterm
    @ref="Xterm"
    Options="TerminalOptions"
    AddonIds="@(new[] { "xterm-addon-fit" })"
    OnFirstRender="OnFirstRender">
</Xterm>

@code
{
    private Xterm Xterm;

    [Parameter]
    public Action RunOnFirstRender { get; set; }

    private TerminalOptions TerminalOptions = new()
    {
        CursorBlink = false,
        CursorStyle = CursorStyle.Underline,
        CursorWidth = 1,
        DisableStdin = true,
        FontFamily = "monospace"
    };

    public async Task WriteLine(string message)
    {
        try
        {
            await Xterm.WriteLine(message);
        }
        catch (Exception)
        {
            // ignored
        }
    }

    public async void Dispose()
    {
        try
        {
            await Xterm.DisposeAsync();
        }
        catch (Exception)
        {
            // ignore dispose errors. They occur when the tab closes unexpectedly
            // so we can ignore them
        }
    }

    private async void OnFirstRender()
    {
        try
        {
            await Xterm.InvokeAddonFunctionVoidAsync("xterm-addon-fit", "fit");
            RunOnFirstRender.Invoke();

            await Task.Run(async () =>
            {
                try
                {
                    await Task.Delay(1000);
                    await Xterm.InvokeAddonFunctionVoidAsync("xterm-addon-fit", "fit");
                    await Task.Delay(1000);
                    await Xterm.InvokeAddonFunctionVoidAsync("xterm-addon-fit", "fit");
                }
                catch (Exception){}
            });
        }
        catch (Exception)
        {
            // ignored
        }
    }
}